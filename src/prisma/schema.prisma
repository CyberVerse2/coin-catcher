// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Renamed from User
model Account {
  id                  String       @id @default(auto()) @map("_id") @db.ObjectId
  walletAddress       String       @unique // Stores the GAME account address (from SDK)
  parentWalletAddress String?      // Stores the EOA that initiated creation (optional)
  username            String       // Default username for the account
  allocatedCoins      Int          @default(100) // Fixed allocation for game account
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt // Added updatedAt

  // Relation to High Scores achieved by this account
  highScores          HighScore[]  @relation("AccountScores") 

  // Allowance Tracking
  currentAllowanceLimitETH    Float?
  currentAllowancePeriodSeconds Int?
  allowancePeriodStart        DateTime?
  allowanceSpentThisPeriodETH Float     @default(0)
}

// REMOVED SubAccount model
// model SubAccount { ... }

model HighScore {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  score         Int
  createdAt     DateTime   @default(now())
  userName      String     // Keep storing the name entered by the player at time of submission

  // Link to the Account that achieved the score
  accountId     String     @db.ObjectId 
  account       Account    @relation("AccountScores", fields: [accountId], references: [id])

  // REMOVED userId/user and subAccountId/subAccount links
  // userId        String?    @db.ObjectId 
  // user          User?      @relation("UserScores", fields: [userId], references: [id])
  // subAccountId  String?    @db.ObjectId
  // subAccount    SubAccount?@relation("SubAccountScores", fields: [subAccountId], references: [id])
}

// REMOVED SpendingLimitInterval enum (was tied to SubAccount)
// enum SpendingLimitInterval { ... } 