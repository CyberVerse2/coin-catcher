// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String       @id @default(auto()) @map("_id") @db.ObjectId
  walletAddress      String       @unique // Primary wallet address of the user
  coinBalance        Int          @default(0) // Derived from primary wallet's USDC balance (0.1 USDC = 1 coin)
  createdAt          DateTime     @default(now())
  highScores         HighScore[]  @relation("UserScores") // Scores achieved directly by this User
  createdSubAccounts SubAccount[] @relation("ParentToSubAccounts") // Subaccounts created by this user
}

model SubAccount {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  parentId            String    @db.ObjectId // ID of the parent User
  parent              User      @relation("ParentToSubAccounts", fields: [parentId], references: [id])
  username            String    // Username for the child/subaccount
  subAccountAddress   String    @unique // Blockchain address of the subaccount (e.g., from Coinbase)
  spendingLimitAmount Float     // The spending limit in a base currency unit (e.g., USDC value).
  spendingLimitInterval SpendingLimitInterval // e.g., WEEKLY, DAILY
  highScores          HighScore[] @relation("SubAccountScores") // High scores achieved by this subaccount
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model HighScore {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  score         Int
  createdAt     DateTime   @default(now())

  // A HighScore belongs to EITHER a User OR a SubAccount
  userId        String?    @db.ObjectId // Set if the score is by a User (parent)
  user          User?      @relation("UserScores", fields: [userId], references: [id])

  subAccountId  String?    @db.ObjectId // Set if the score is by a SubAccount (child)
  subAccount    SubAccount?@relation("SubAccountScores", fields: [subAccountId], references: [id])

  // Application logic will need to ensure that for each HighScore,
  // either userId OR subAccountId is populated, but not both.
  // For leaderboard display, the name will be fetched from the related User or SubAccount.
}

enum SpendingLimitInterval {
  PER_SESSION
  DAILY
  WEEKLY
  MONTHLY
} 